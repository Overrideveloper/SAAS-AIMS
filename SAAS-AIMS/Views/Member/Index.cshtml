@model IEnumerable<AIMS.Data.DataObjects.Entities.Member.Member>
@using AIMS.Data.Enums.Enums.NotificationType
@using System.ComponentModel;
@using AIMS.Data.Enums.Enums.State;
@using AIMS.Data.Enums.Enums.Level;
@using Microsoft.AspNet.Identity
@using SAAS_AIMS.Models

@{
    TypeConverter converter1 = TypeDescriptor.GetConverter(typeof(Level));
    TypeConverter converter2 = TypeDescriptor.GetConverter(typeof(State));
    ViewBag.Title = "Members";
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
    var id = User.Identity.GetUserId();
    AppUserDataContext _context = new AppUserDataContext();
    var user = _context.Users.Find(id);
    var role = user.Role;
}

<div class="right_col" role="main">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Association Members</h3>
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="clearfix"></div>

        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_content table-responsive">

                        @if (TempData["Success"] != null || TempData["Response"] != null || TempData["Error"] != null)
                        {
                            if (TempData["NotificationType"] == NotificationType.Create.ToString())
                            {
                                <div class="alert alert-success alert-dismissible fadeIn fadeOut out fade in" role="alert">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    @TempData["Success"]
                                </div>
                            }
                            if (TempData["NotificationType"] == NotificationType.Edit.ToString())
                            {
                                <div class="alert alert-success alert-dismissible fadeIn fadeOut out fade in" role="alert">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    @TempData["Success"]
                                </div>
                            }
                            if (TempData["NotificationType"] == NotificationType.Delete.ToString())
                            {
                                <div class="alert alert-success alert-dismissible fadeIn fadeOut out fade in" role="alert">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    @TempData["Success"]
                                </div>
                            }
                             if (TempData["NotificationType"] == NotificationType.Upload.ToString() && TempData["Type"] == "Error")
                            {
                                <div class="alert alert-danger alert-dismissible fadeIn fadeOut out fade in" role="alert">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    @TempData["Response"]
                                </div>
                            }
                            if (TempData["NotificationType"] == NotificationType.Upload.ToString() && TempData["Type"] == "Success")
                            {
                                if (TempData["Response"] == "Succesfully uploaded members' data!")
                                {
                                    <div class="alert alert-success alert-dismissible fadeIn fadeOut out fade in" role="alert">
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                        @TempData["Response"]
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-danger alert-dismissible fadeIn fadeOut out fade in" role="alert">
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                        @TempData["Response"]
                                    </div>
                                }
                            }
                             if (TempData["NotificationType"] == NotificationType.Upload.ToString() && TempData["Variant"] == "Error")
                            {
                                <div class="alert alert-danger alert-dismissible fadeIn fadeOut out fade in" role="alert">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    @TempData["Error"]
                                </div>
                            }
                        }

                        @if (role.CanManageMembers) {
                            <div class="pull-left">
                                <a class="btn btn-info btn-sm" href="@Url.Action("Upload", "Member", new { upload = true })"><i class="fa fa-upload"></i> Upload Members' Data via CSV</a><br />
                            </div>

                            <div class="pull-right">
                                <a class="btn btn-info btn-sm" data-modal="" href="@Url.Action("Create", "Member")"><i class="fa fa-plus"></i> Add Member</a><br />
                            </div>
                        }
                        <table id="datatable-buttons" class="grid table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>Surname</th>
                                    <th>First Name</th>
                                    <th>Matric. Number</th>
                                    <th>Gender</th>
                                    <th>State of Origin</th>
                                    <th>Year of Admission</th>
                                    <th>Level at Admission</th>
                                    <th></th>
                                </tr>
                            </thead>


                            <tbody>
                                @foreach (var member in Model)
                                {
                                    <tr>
                                        <td>@member.Surname</td>
                                        <td>@member.FirstName</td>
                                        <td>@member.MatricNumber</td>
                                        <td>@member.Gender</td>
                                        <td>@converter2.ConvertToString(member.StateOfOrigin)</td>
                                        <td>@member.YearOfAdmission</td>
                                        <td>@converter1.ConvertToString(member.LevelOfAdmission)</td>
                                        <td>
                                            @if (role.CanManageMembers)
                                            {
                                                <a class="btn btn-xs btn-default" data-modal="" href="@Url.Action("Edit", "Member", new { id = member.ID })"><i class="fa fa-pencil"></i> Edit</a>
                                                <a class="btn btn-xs btn-danger delete" href="@Url.Action("Delete", "Member", new { id = member.ID})"><i class="fa fa-remove"></i> Delete</a>
                                                <a class="btn btn-xs btn-info" href="@Url.Action("Index", "Dues", new { memberid = member.ID})"><i class="fa fa-files-o"></i> View Dues Details</a>   
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        @if (role.CanManageMembers)
                        {
                            <!-- modal placeholder-->
                            <div id='myModal' class='modal fade in'>
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div id='myModalContent'></div>
                                    </div>
                                </div>
                            </div>    
                        }
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/moment.js")
    <script type="text/javascript" src="~/Scripts/modal.js"></script>
    <script type="text/javascript" src="~/Scripts/delete.js"></script>
}
